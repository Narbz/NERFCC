<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ams">

<!-- for every table(and consequently every class we made for the tables) we need to create a resultmap.  A resultmap binds the elements from our classes and the tables so that we can use the setters and getters from those classes. -->
<!-- make sure the name you set for 'class' is the exact name you made for the java class -->
<resultMap id="item" type="Item">
	<result property="upc" column="upc"/>
	<result property="itemTitle" column="itemTitle"/>
	<result property="type" column="type"/>
	<result property="category" column="category"/>
	<result property="company" column="company"/>
	<result property="year" column="year"/>
	<result property="price" column="price"/>
	<result property="stock" column="stock"/>
</resultMap>

<resultMap id="order" type="Order">
	<result property="receiptId" column="receiptId"/>
	<result property="date" column="date"/>
	<result property="cid" column="cid"/>
	<result property="card#" column="card#"/>
	<result property="expiryDate" column="expiryDate"/>
	<result property="expectedDate" column="expectedDate"/>
	<result property="deliveredDate" column="deliveredDate"/>
</resultMap>


<!-- add your result maps here -->

<!-- end Resultmaps section -->


<!-- Start of the sql statements -->

<!-- for every insert, select and update, ensure to create a unique id for the statement(follow format below) -->

<!-- Insert Statements-->

<insert id="insertItem">
	insert into Item
		values (#{upc}, #{itemTitle}, #{type}, #{category}, #{company}, #{year}, #{price}, #{stock})
</insert>

<insert id="insertOrder">
	insert into Order
		values (#{receiptId}, #{date}, #{cid}, #{card#}, #{expireDate}, #{expectedDate}, #{deliveredDate})
</insert>

<insert id="insertCustomer">
	insert into Customer
		values (#{cid}, #{password}, #{customerName}, #{address}, #{phone});
</insert>

<insert id="insertHasSong">
	insert into HasSong
		values (#{upc}, #{songTitle})
</insert>

<insert id="insertLeadSinger">
	insert into LeadSinger
		values (#{upc}, #{singerName})
</insert>

<insert id="insertPurchaseItem">
	insert into PurchaseItem
		values (#{recieptId}, #{upc}, #{quantity})
</insert>

<insert id="insertReturn">
	insert into Return
		values (#{retid}, #{date}, #{receiptId})
</insert>

<insert id="insertReturnItem">
	insert into ReturnItem
		values (#{retid} #{upc}, #{quantity})
</insert>

<!-- Select Statements. -->
<select id="selectCustomer">
	SELECT Customer.cid
	FROM Customer
	WHERE cid = #{cid}
</select>

<select id="selectCustomerLogin">
	SELECT Customer.cid
	FROM Customer
	WHERE Customer.cid = #{cid} AND Customer.password = #{password}
</select>

<select id="selectReceiptToVerifyDate">
	SELECT Orders.receiptID
	FROM Orders where Orders.receiptID = #{receiptID} AND getDate()
	BETWEEN Orders.date AND DATEADD(dd, 15, Orders.date)
</select>

<select id="selectItemStock">
	SELECT Item.stock
	FROM Item I
	WHERE I.upc = #{upc}
</select>

<select id="selectDailySalesReport">
	WITH temp(upc, category, price, quantity, receiptId) AS
	(
	SELECT Item.upc, Item.category, Item.price, SUM(PurchaseItem.quantity), PurchaseItem.receiptId
	FROM Item inner join PurchaseItem
	ON Item.upc=PurchaseItem.upc
	GROUP BY PuchaseItem.upc
	),
	temp2(upc, category, price, quantity, orderDate) AS
	(
	SELECT temp.upc, temp.category, Item.price, temp.quantity, Order.date
	FROM Orders inner join temp
	ON Orders.receiptId=temp.receiptId
	)
	SELECT temp2.upc, temp2.category, temp2.price, temp2.quantity, (temp2.price*temp2.quantity) as total
	FROM temp2
	WHERE temp2.date=#{date}
</select>

<select id="selectTopNItems">
	WITH temp( itemTitle, company, stock, quantity, receiptId) AS
	(
	SELECT Item.itemTitle, Item.company, Item.stock, SUM(PurchaseItem.quantity), PurchaseItem.receiptId
	FROM Item inner join PurchaseItem
	ON Item.upc=PurchaseItem.upc
	GROUP BY PuchaseItem.upc
	),
	temp2(itemTile, company, stock, quantity, orderDate) AS
	(
	SELECT  temp.itemTitle, temp.company, temp.stock, temp.quantity, Order.date
	FROM Orders inner join temp
	ON Orders.receiptId=temp.receiptId
	)
	    SELECT top #{n} temp2.itemTitle, temp2.category, temp2.stock, temp2.quantity
	FROM temp2
	where temp2.orderDate = #{date}
	ORDER BY temp2.quantity
</select>

<select id="selectItem">
	SELECT *
	FROM (SELECT *
		  FROM Item I INNER JOIN LeadSinger S
		  ON I.upc = S.upc)
	WHERE category = #{category} OR title = #{title} OR name = #{name}
</select>

<!--Update Statements-->
<update id="updateItemStock">
	UPDATE Item
	SET stock = #{stock}
	WHERE upc = #{upc}
</update>

<update id="updateOrderDate">
	UPDATE Orders
	SET expectedDate = #{expectedDate}
	WHERE receiptID = #{receiptID}
</update>

</mapper>